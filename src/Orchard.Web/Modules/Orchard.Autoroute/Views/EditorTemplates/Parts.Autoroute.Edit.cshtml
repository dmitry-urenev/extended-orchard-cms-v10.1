@using Orchard.Autoroute
@using Orchard.Environment.Configuration
@using Orchard.Mvc.Extensions
@model Orchard.Autoroute.ViewModels.AutoroutePartEditViewModel

@if (Model.Settings.Patterns.Where(x => x.Culture == Model.CurrentCulture).Count() == 0) {
    <div class="message message-Error">@T("The current Content Type does not have a default Autoroute Pattern. Please edit the settings first.")</div>
    return;
}

@{
    var defaultPattern = Model.Settings.DefaultPatterns.Where(x => x.Culture == Model.CurrentCulture).FirstOrDefault();
    var pattern = Model.Settings.Patterns.Where(x => x.Culture == Model.CurrentCulture);

    var urlPrefix = WorkContext.Resolve<ShellSettings>().RequestUrlPrefix;
    if (!String.IsNullOrWhiteSpace(urlPrefix)) {
        urlPrefix += "/";
    }
}


<fieldset class="permalink">
    <label>@T("Permalink")</label>
    @if (Model.Settings.AllowCustomPattern) {
        <span class="permalink-definition" dir="ltr">
            <span>@Url.GetAbsoluteUrl("/")@urlPrefix</span>
            <span>
                <input type="text" class="text is-url" 
                       name="@Html.NameFor(m => m.LocalAlias)" value="@Model.Alias" />
                <input type="hidden" name="@Html.NameFor(m => m.Alias)" value="" />
            </span>
        </span>
        <span class="hint">@T("Save the current item and leave the input empty to have it automatically generated using the pattern {0} e.g., {1}.", pattern.ElementAtOrDefault(Convert.ToInt32(defaultPattern.PatternIndex)).Name, pattern.ElementAtOrDefault(Convert.ToInt32(defaultPattern.PatternIndex)).Description)</span>
    }
    else
    {
        var hintClass = string.Empty;
        if (!string.IsNullOrEmpty(Model.Alias))
        {
            hintClass = "hint";
            <span>@Url.GetAbsoluteUrl("/")@urlPrefix</span>
            <span>@Model.Alias</span>
        }

        if (string.IsNullOrEmpty(Model.Alias)
            || (!string.IsNullOrEmpty(Model.Alias) && Model.Settings.AutomaticAdjustmentOnEdit)) {
            <span class="@hintClass">@T("Save the current item and the url will be generated using the pattern {0} e.g., {1}.", pattern.ElementAtOrDefault(Convert.ToInt32(defaultPattern.PatternIndex)).Name, pattern.ElementAtOrDefault(Convert.ToInt32(defaultPattern.PatternIndex)).Description)</span>
        }
    }
    @if (!String.IsNullOrEmpty(Model.Alias)) {
        <span>
            @Html.Link(
                T("View").Text,
                Url.GetAbsoluteUrl("/") + urlPrefix + Model.Alias.TrimStart('/'),
                new { target = "_blank" })
        </span>
    }

</fieldset>
@if (!Model.IsHomePage) {
    if (AuthorizedFor(Permissions.SetHomePage)) {
        <fieldset>
            <span class="checkbox-and-label">
                @Html.CheckBoxFor(m => m.PromoteToHomePage)
                <label for="@Html.FieldIdFor(m => m.PromoteToHomePage)" class="forcheckbox">@T("Set as home page")</label>
            </span>
            <span class="hint">@T("Check to promote this content as the home page.")</span>
        </fieldset>
    }
}
else {
    <span>@T("This content is the current home page")</span>
}
